/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import signingToday.client.model.SignatureRestriction;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SignatureRequest
 */
public class SignatureRequestTest {
    private final SignatureRequest model = new SignatureRequest();

    /**
     * Model tests for SignatureRequest
     */
    @Test
    public void testSignatureRequest() {
        // TODO: test SignatureRequest
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    public void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'signerId'
     */
    @Test
    public void signerIdTest() {
        // TODO: test signerId
    }

    /**
     * Test the property 'signProfile'
     */
    @Test
    public void signProfileTest() {
        // TODO: test signProfile
    }

    /**
     * Test the property 'withTimestamp'
     */
    @Test
    public void withTimestampTest() {
        // TODO: test withTimestamp
    }

    /**
     * Test the property 'declinable'
     */
    @Test
    public void declinableTest() {
        // TODO: test declinable
    }

    /**
     * Test the property 'restrictions'
     */
    @Test
    public void restrictionsTest() {
        // TODO: test restrictions
    }

    /**
     * Test the property 'extraData'
     */
    @Test
    public void extraDataTest() {
        // TODO: test extraData
    }

}
