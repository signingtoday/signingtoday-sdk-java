/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import signingToday.client.model.OrganizationPrivateSettings;
import signingToday.client.model.OrganizationPublicSettings;
import signingToday.client.model.OrganizationSettings;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Organization
 */
public class OrganizationTest {
    private final Organization model = new Organization();

    /**
     * Model tests for Organization
     */
    @Test
    public void testOrganization() {
        // TODO: test Organization
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'emailOverrideFolderPath'
     */
    @Test
    public void emailOverrideFolderPathTest() {
        // TODO: test emailOverrideFolderPath
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'contactPhone'
     */
    @Test
    public void contactPhoneTest() {
        // TODO: test contactPhone
    }

    /**
     * Test the property 'nation'
     */
    @Test
    public void nationTest() {
        // TODO: test nation
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'deletedAt'
     */
    @Test
    public void deletedAtTest() {
        // TODO: test deletedAt
    }

    /**
     * Test the property 'privateSettings'
     */
    @Test
    public void privateSettingsTest() {
        // TODO: test privateSettings
    }

    /**
     * Test the property 'publicSettings'
     */
    @Test
    public void publicSettingsTest() {
        // TODO: test publicSettings
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

}
