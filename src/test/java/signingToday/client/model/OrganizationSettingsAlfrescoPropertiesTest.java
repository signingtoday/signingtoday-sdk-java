/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrganizationSettingsAlfrescoProperties
 */
public class OrganizationSettingsAlfrescoPropertiesTest {
    private final OrganizationSettingsAlfrescoProperties model = new OrganizationSettingsAlfrescoProperties();

    /**
     * Model tests for OrganizationSettingsAlfrescoProperties
     */
    @Test
    public void testOrganizationSettingsAlfrescoProperties() {
        // TODO: test OrganizationSettingsAlfrescoProperties
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'basePath'
     */
    @Test
    public void basePathTest() {
        // TODO: test basePath
    }

    /**
     * Test the property 'relativePath'
     */
    @Test
    public void relativePathTest() {
        // TODO: test relativePath
    }

    /**
     * Test the property 'baseNodeId'
     */
    @Test
    public void baseNodeIdTest() {
        // TODO: test baseNodeId
    }

}
