/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import signingToday.client.model.IdentityProviderData;
import signingToday.client.model.LFResource;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Identity
 */
public class IdentityTest {
    private final Identity model = new Identity();

    /**
     * Model tests for Identity
     */
    @Test
    public void testIdentity() {
        // TODO: test Identity
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'providerType'
     */
    @Test
    public void providerTypeTest() {
        // TODO: test providerType
    }

    /**
     * Test the property 'subjectCommonName'
     */
    @Test
    public void subjectCommonNameTest() {
        // TODO: test subjectCommonName
    }

    /**
     * Test the property 'issuerCommonName'
     */
    @Test
    public void issuerCommonNameTest() {
        // TODO: test issuerCommonName
    }

    /**
     * Test the property 'expireDate'
     */
    @Test
    public void expireDateTest() {
        // TODO: test expireDate
    }

    /**
     * Test the property 'rawCertificate'
     */
    @Test
    public void rawCertificateTest() {
        // TODO: test rawCertificate
    }

    /**
     * Test the property 'appearance'
     */
    @Test
    public void appearanceTest() {
        // TODO: test appearance
    }

    /**
     * Test the property 'providerData'
     */
    @Test
    public void providerDataTest() {
        // TODO: test providerData
    }

    /**
     * Test the property 'valid'
     */
    @Test
    public void validTest() {
        // TODO: test valid
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
