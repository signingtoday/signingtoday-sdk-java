/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import signingToday.client.model.SAMLTokenEduPersonTargetedID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SAMLToken
 */
public class SAMLTokenTest {
    private final SAMLToken model = new SAMLToken();

    /**
     * Model tests for SAMLToken
     */
    @Test
    public void testSAMLToken() {
        // TODO: test SAMLToken
    }

    /**
     * Test the property 'notOnorafter'
     */
    @Test
    public void notOnorafterTest() {
        // TODO: test notOnorafter
    }

    /**
     * Test the property 'surname'
     */
    @Test
    public void surnameTest() {
        // TODO: test surname
    }

    /**
     * Test the property 'givenName'
     */
    @Test
    public void givenNameTest() {
        // TODO: test givenName
    }

    /**
     * Test the property 'commonName'
     */
    @Test
    public void commonNameTest() {
        // TODO: test commonName
    }

    /**
     * Test the property 'rfc822Mailbox'
     */
    @Test
    public void rfc822MailboxTest() {
        // TODO: test rfc822Mailbox
    }

    /**
     * Test the property 'notBefore'
     */
    @Test
    public void notBeforeTest() {
        // TODO: test notBefore
    }

    /**
     * Test the property 'userid'
     */
    @Test
    public void useridTest() {
        // TODO: test userid
    }

    /**
     * Test the property 'mailAlternateAddress'
     */
    @Test
    public void mailAlternateAddressTest() {
        // TODO: test mailAlternateAddress
    }

    /**
     * Test the property 'eduPersonOrgDN'
     */
    @Test
    public void eduPersonOrgDNTest() {
        // TODO: test eduPersonOrgDN
    }

    /**
     * Test the property 'eduPersonPrincipalName'
     */
    @Test
    public void eduPersonPrincipalNameTest() {
        // TODO: test eduPersonPrincipalName
    }

    /**
     * Test the property 'isMemberOf'
     */
    @Test
    public void isMemberOfTest() {
        // TODO: test isMemberOf
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'eduPersonTargetedID'
     */
    @Test
    public void eduPersonTargetedIDTest() {
        // TODO: test eduPersonTargetedID
    }

    /**
     * Test the property 'cookies'
     */
    @Test
    public void cookiesTest() {
        // TODO: test cookies
    }

}
