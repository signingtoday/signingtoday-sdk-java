/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.api;

import signingToday.client.ApiException;
import signingToday.client.model.ErrorResponse;
import signingToday.client.model.InlineObject8;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SigningServicesApi
 */
@Ignore
public class SigningServicesApiTest {

    private final SigningServicesApi api = new SigningServicesApi();

    
    /**
     * sign-service open post
     *
     * description bla bla
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void signServiceOpenTest() throws ApiException {
        Object response = api.signServiceOpen();

        // TODO: test validations
    }
    
    /**
     * sign-service-open-transaction-id post
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void signServiceOpenIdTest() throws ApiException {
        String transactionId = null;
        Object response = api.signServiceOpenId(transactionId);

        // TODO: test validations
    }
    
    /**
     * sign-service-signature-id-perform-identity-id post
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void signatureIdPerformIdPostTest() throws ApiException {
        String signatureId = null;
        String identityId = null;
        InlineObject8 inlineObject8 = null;
        Object response = api.signatureIdPerformIdPost(signatureId, identityId, inlineObject8);

        // TODO: test validations
    }
    
}
