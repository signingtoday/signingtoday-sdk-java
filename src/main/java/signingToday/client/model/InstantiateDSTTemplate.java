/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import signingToday.client.model.CreateDigitalSignatureTransaction;
import signingToday.client.model.RobotIdInstantiateRolesMapping;

/**
 * InstantiateDSTTemplate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class InstantiateDSTTemplate {
  public static final String SERIALIZED_NAME_TEMPLATE_PATCHES = "templatePatches";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_PATCHES)
  private CreateDigitalSignatureTransaction templatePatches;

  public static final String SERIALIZED_NAME_ROLES_MAPPING = "rolesMapping";
  @SerializedName(SERIALIZED_NAME_ROLES_MAPPING)
  private List<RobotIdInstantiateRolesMapping> rolesMapping = null;


  public InstantiateDSTTemplate templatePatches(CreateDigitalSignatureTransaction templatePatches) {
    
    this.templatePatches = templatePatches;
    return this;
  }

   /**
   * Get templatePatches
   * @return templatePatches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CreateDigitalSignatureTransaction getTemplatePatches() {
    return templatePatches;
  }


  public void setTemplatePatches(CreateDigitalSignatureTransaction templatePatches) {
    this.templatePatches = templatePatches;
  }


  public InstantiateDSTTemplate rolesMapping(List<RobotIdInstantiateRolesMapping> rolesMapping) {
    
    this.rolesMapping = rolesMapping;
    return this;
  }

  public InstantiateDSTTemplate addRolesMappingItem(RobotIdInstantiateRolesMapping rolesMappingItem) {
    if (this.rolesMapping == null) {
      this.rolesMapping = new ArrayList<RobotIdInstantiateRolesMapping>();
    }
    this.rolesMapping.add(rolesMappingItem);
    return this;
  }

   /**
   * Indicates the mapping between the role specified into the template and the actual signer have to sign the _Digital Signature Transaction_
   * @return rolesMapping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"buyer\":{\"email\":\"adam.smith@example.co.uk\"}}", value = "Indicates the mapping between the role specified into the template and the actual signer have to sign the _Digital Signature Transaction_")

  public List<RobotIdInstantiateRolesMapping> getRolesMapping() {
    return rolesMapping;
  }


  public void setRolesMapping(List<RobotIdInstantiateRolesMapping> rolesMapping) {
    this.rolesMapping = rolesMapping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstantiateDSTTemplate instantiateDSTTemplate = (InstantiateDSTTemplate) o;
    return Objects.equals(this.templatePatches, instantiateDSTTemplate.templatePatches) &&
        Objects.equals(this.rolesMapping, instantiateDSTTemplate.rolesMapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(templatePatches, rolesMapping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstantiateDSTTemplate {\n");
    sb.append("    templatePatches: ").append(toIndentedString(templatePatches)).append("\n");
    sb.append("    rolesMapping: ").append(toIndentedString(rolesMapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

