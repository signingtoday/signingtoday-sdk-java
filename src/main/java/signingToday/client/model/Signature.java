/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * Signature
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class Signature {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "_instance_id";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private Long instanceId;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "documentId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private Integer documentId;

  public static final String SERIALIZED_NAME_SIGNATURE_REQUEST_ID = "signatureRequestId";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_REQUEST_ID)
  private Integer signatureRequestId;

  public static final String SERIALIZED_NAME_SIGNED_AT = "signedAt";
  @SerializedName(SERIALIZED_NAME_SIGNED_AT)
  private OffsetDateTime signedAt;

  public static final String SERIALIZED_NAME_DECLINED_REASON = "declinedReason";
  @SerializedName(SERIALIZED_NAME_DECLINED_REASON)
  private String declinedReason;

  /**
   * Status of the signature, which can be _signed_ or _declined_
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    SIGNED("signed"),
    
    DECLINED("declined");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extraData";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = null;


   /**
   * It is a reference for internal use
   * @return instanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "It is a reference for internal use")

  public Long getInstanceId() {
    return instanceId;
  }




  public Signature documentId(Integer documentId) {
    
    this.documentId = documentId;
    return this;
  }

   /**
   * Id of the document
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Id of the document")

  public Integer getDocumentId() {
    return documentId;
  }


  public void setDocumentId(Integer documentId) {
    this.documentId = documentId;
  }


  public Signature signatureRequestId(Integer signatureRequestId) {
    
    this.signatureRequestId = signatureRequestId;
    return this;
  }

   /**
   * Id of the requested signature
   * @return signatureRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Id of the requested signature")

  public Integer getSignatureRequestId() {
    return signatureRequestId;
  }


  public void setSignatureRequestId(Integer signatureRequestId) {
    this.signatureRequestId = signatureRequestId;
  }


  public Signature signedAt(OffsetDateTime signedAt) {
    
    this.signedAt = signedAt;
    return this;
  }

   /**
   * Indicates when the DST has been signed
   * @return signedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-10-17T07:26Z", value = "Indicates when the DST has been signed")

  public OffsetDateTime getSignedAt() {
    return signedAt;
  }


  public void setSignedAt(OffsetDateTime signedAt) {
    this.signedAt = signedAt;
  }


  public Signature declinedReason(String declinedReason) {
    
    this.declinedReason = declinedReason;
    return this;
  }

   /**
   * Get declinedReason
   * @return declinedReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Reason of declination", value = "")

  public String getDeclinedReason() {
    return declinedReason;
  }


  public void setDeclinedReason(String declinedReason) {
    this.declinedReason = declinedReason;
  }


   /**
   * Status of the signature, which can be _signed_ or _declined_
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "signed", value = "Status of the signature, which can be _signed_ or _declined_")

  public StatusEnum getStatus() {
    return status;
  }




  public Signature extraData(Map<String, Object> extraData) {
    
    this.extraData = extraData;
    return this;
  }

  public Signature putExtraDataItem(String key, Object extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new HashMap<String, Object>();
    }
    this.extraData.put(key, extraDataItem);
    return this;
  }

   /**
   * Extra data of the signature
   * @return extraData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"st_uuid\":\"d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882\"}", value = "Extra data of the signature")

  public Map<String, Object> getExtraData() {
    return extraData;
  }


  public void setExtraData(Map<String, Object> extraData) {
    this.extraData = extraData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Signature signature = (Signature) o;
    return Objects.equals(this.instanceId, signature.instanceId) &&
        Objects.equals(this.documentId, signature.documentId) &&
        Objects.equals(this.signatureRequestId, signature.signatureRequestId) &&
        Objects.equals(this.signedAt, signature.signedAt) &&
        Objects.equals(this.declinedReason, signature.declinedReason) &&
        Objects.equals(this.status, signature.status) &&
        Objects.equals(this.extraData, signature.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, documentId, signatureRequestId, signedAt, declinedReason, status, extraData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Signature {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    signatureRequestId: ").append(toIndentedString(signatureRequestId)).append("\n");
    sb.append("    signedAt: ").append(toIndentedString(signedAt)).append("\n");
    sb.append("    declinedReason: ").append(toIndentedString(declinedReason)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

