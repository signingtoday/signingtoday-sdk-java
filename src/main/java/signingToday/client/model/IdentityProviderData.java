/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import signingToday.client.model.IdentityProviderDataTokenInfo;

/**
 * IdentityProviderData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class IdentityProviderData {
  public static final String SERIALIZED_NAME_SMARTCARD_I_D = "smartcardID";
  @SerializedName(SERIALIZED_NAME_SMARTCARD_I_D)
  private BigDecimal smartcardID;

  public static final String SERIALIZED_NAME_MIDDLEWARE_I_D = "middlewareID";
  @SerializedName(SERIALIZED_NAME_MIDDLEWARE_I_D)
  private String middlewareID;

  public static final String SERIALIZED_NAME_A_T_R = "ATR";
  @SerializedName(SERIALIZED_NAME_A_T_R)
  private String ATR;

  public static final String SERIALIZED_NAME_TOKEN_INFO = "tokenInfo";
  @SerializedName(SERIALIZED_NAME_TOKEN_INFO)
  private IdentityProviderDataTokenInfo tokenInfo;

  public static final String SERIALIZED_NAME_READER = "reader";
  @SerializedName(SERIALIZED_NAME_READER)
  private String reader;


  public IdentityProviderData smartcardID(BigDecimal smartcardID) {
    
    this.smartcardID = smartcardID;
    return this;
  }

   /**
   * Get smartcardID
   * @return smartcardID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-1121978858", value = "")

  public BigDecimal getSmartcardID() {
    return smartcardID;
  }


  public void setSmartcardID(BigDecimal smartcardID) {
    this.smartcardID = smartcardID;
  }


  public IdentityProviderData middlewareID(String middlewareID) {
    
    this.middlewareID = middlewareID;
    return this;
  }

   /**
   * Get middlewareID
   * @return middlewareID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bit4xpki", value = "")

  public String getMiddlewareID() {
    return middlewareID;
  }


  public void setMiddlewareID(String middlewareID) {
    this.middlewareID = middlewareID;
  }


  public IdentityProviderData ATR(String ATR) {
    
    this.ATR = ATR;
    return this;
  }

   /**
   * Get ATR
   * @return ATR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3bff1800008131fe55006b02090403010101434e5310318065", value = "")

  public String getATR() {
    return ATR;
  }


  public void setATR(String ATR) {
    this.ATR = ATR;
  }


  public IdentityProviderData tokenInfo(IdentityProviderDataTokenInfo tokenInfo) {
    
    this.tokenInfo = tokenInfo;
    return this;
  }

   /**
   * Get tokenInfo
   * @return tokenInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityProviderDataTokenInfo getTokenInfo() {
    return tokenInfo;
  }


  public void setTokenInfo(IdentityProviderDataTokenInfo tokenInfo) {
    this.tokenInfo = tokenInfo;
  }


  public IdentityProviderData reader(String reader) {
    
    this.reader = reader;
    return this;
  }

   /**
   * Get reader
   * @return reader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Generic Smart Card Reader Interface 0", value = "")

  public String getReader() {
    return reader;
  }


  public void setReader(String reader) {
    this.reader = reader;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityProviderData identityProviderData = (IdentityProviderData) o;
    return Objects.equals(this.smartcardID, identityProviderData.smartcardID) &&
        Objects.equals(this.middlewareID, identityProviderData.middlewareID) &&
        Objects.equals(this.ATR, identityProviderData.ATR) &&
        Objects.equals(this.tokenInfo, identityProviderData.tokenInfo) &&
        Objects.equals(this.reader, identityProviderData.reader);
  }

  @Override
  public int hashCode() {
    return Objects.hash(smartcardID, middlewareID, ATR, tokenInfo, reader);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityProviderData {\n");
    sb.append("    smartcardID: ").append(toIndentedString(smartcardID)).append("\n");
    sb.append("    middlewareID: ").append(toIndentedString(middlewareID)).append("\n");
    sb.append("    ATR: ").append(toIndentedString(ATR)).append("\n");
    sb.append("    tokenInfo: ").append(toIndentedString(tokenInfo)).append("\n");
    sb.append("    reader: ").append(toIndentedString(reader)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

