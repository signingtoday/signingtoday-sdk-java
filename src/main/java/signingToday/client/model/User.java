/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import signingToday.client.model.UserGroup;

/**
 * The **User** object is the one that serializes the users of the _Organizations_. The _User_ has field that identifies the generality of the person who has been registered and uses the platform, as well as the digital identities through which he can sign documents. 
 */
@ApiModel(description = "The **User** object is the one that serializes the users of the _Organizations_. The _User_ has field that identifies the generality of the person who has been registered and uses the platform, as well as the digital identities through which he can sign documents. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class User {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  /**
   * The default language of the User
   */
  @JsonAdapter(LanguageEnum.Adapter.class)
  public enum LanguageEnum {
    IT("it"),
    
    EN("en"),
    
    ES("es"),
    
    FR("fr");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LanguageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LanguageEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private LanguageEnum language;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private BigDecimal phone;

  /**
   * The role of the User. The **admin** can create users, as well as DSTs and can sign. The **instructor** can create DSTs and sign. The **signer** can only sign documents. 
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    ADMIN("admin"),
    
    INSTRUCTOR("instructor"),
    
    SIGNER("signer");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RoleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private RoleEnum role;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<UserGroup> groups = null;

  /**
   * Gets or Sets capabilities
   */
  @JsonAdapter(String.Adapter.class)
  public enum String {

    private String value;

    String(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static String fromValue(String value) {
      for (String b : String.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<String> {
      @Override
      public void write(final JsonWriter jsonWriter, final String enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public String read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return String.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private CapabilitiesEnum capabilities = null;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UUID createdBy;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deletedAt";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private OffsetDateTime deletedAt;

  public static final String SERIALIZED_NAME_AUTOMATIC = "automatic";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC)
  private Boolean automatic;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extraData";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = null;


   /**
   * The unique id of the User
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "e6419924-fd1d-4c42-9fa2-88023461f5df", value = "The unique id of the User")

  public UUID getId() {
    return id;
  }




  public User username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username of the User. The username is used to login
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jdo", value = "The username of the User. The username is used to login")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public User domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * The _domain_ is the Organization which a user or a DST belongs
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bit4id", value = "The _domain_ is the Organization which a user or a DST belongs")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    this.domain = domain;
  }


  public User language(LanguageEnum language) {
    
    this.language = language;
    return this;
  }

   /**
   * The default language of the User
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "The default language of the User")

  public LanguageEnum getLanguage() {
    return language;
  }


  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public User name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the User
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John", value = "The name of the User")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public User surname(String surname) {
    
    this.surname = surname;
    return this;
  }

   /**
   * The name of the User
   * @return surname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Doe", value = "The name of the User")

  public String getSurname() {
    return surname;
  }


  public void setSurname(String surname) {
    this.surname = surname;
  }


  public User email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email address of the User
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john.doe@email.com", value = "The email address of the User")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public User phone(BigDecimal phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * The phone number of the User
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+013392213450", value = "The phone number of the User")

  public BigDecimal getPhone() {
    return phone;
  }


  public void setPhone(BigDecimal phone) {
    this.phone = phone;
  }


  public User role(RoleEnum role) {
    
    this.role = role;
    return this;
  }

   /**
   * The role of the User. The **admin** can create users, as well as DSTs and can sign. The **instructor** can create DSTs and sign. The **signer** can only sign documents. 
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "signer", value = "The role of the User. The **admin** can create users, as well as DSTs and can sign. The **instructor** can create DSTs and sign. The **signer** can only sign documents. ")

  public RoleEnum getRole() {
    return role;
  }


  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public User groups(List<UserGroup> groups) {
    
    this.groups = groups;
    return this;
  }

  public User addGroupsItem(UserGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<UserGroup>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * A group of users. This is useful during DSTs creation, it is possible to select a group as signers. This way all the components of that group have to sign the document
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A group of users. This is useful during DSTs creation, it is possible to select a group as signers. This way all the components of that group have to sign the document")

  public List<UserGroup> getGroups() {
    return groups;
  }


  public void setGroups(List<UserGroup> groups) {
    this.groups = groups;
  }


  public User capabilities(CapabilitiesEnum capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

  public User addCapabilitiesItem(String capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<String>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * The capabilities represents the action a user is able to do
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The capabilities represents the action a user is able to do")

  public CapabilitiesEnum getCapabilities() {
    return capabilities;
  }


  public void setCapabilities(CapabilitiesEnum capabilities) {
    this.capabilities = capabilities;
  }


   /**
   * The one which created the User
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d", value = "The one which created the User")

  public UUID getCreatedBy() {
    return createdBy;
  }




   /**
   * The date of the creation of the User
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2007-04-02T19:30:10Z", value = "The date of the creation of the User")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The date of deletion of the User
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2007-04-02T19:30:10Z", value = "The date of deletion of the User")

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }




   /**
   * If true the user is automatic
   * @return automatic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If true the user is automatic")

  public Boolean getAutomatic() {
    return automatic;
  }




  public User extraData(Map<String, Object> extraData) {
    
    this.extraData = extraData;
    return this;
  }

  public User putExtraDataItem(String key, Object extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new HashMap<String, Object>();
    }
    this.extraData.put(key, extraDataItem);
    return this;
  }

   /**
   * Extra data associated to the User
   * @return extraData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"st_uuid\":\"d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882\"}", value = "Extra data associated to the User")

  public Map<String, Object> getExtraData() {
    return extraData;
  }


  public void setExtraData(Map<String, Object> extraData) {
    this.extraData = extraData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.domain, user.domain) &&
        Objects.equals(this.language, user.language) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.surname, user.surname) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.phone, user.phone) &&
        Objects.equals(this.role, user.role) &&
        Objects.equals(this.groups, user.groups) &&
        Objects.equals(this.capabilities, user.capabilities) &&
        Objects.equals(this.createdBy, user.createdBy) &&
        Objects.equals(this.createdAt, user.createdAt) &&
        Objects.equals(this.deletedAt, user.deletedAt) &&
        Objects.equals(this.automatic, user.automatic) &&
        Objects.equals(this.extraData, user.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, domain, language, name, surname, email, phone, role, groups, capabilities, createdBy, createdAt, deletedAt, automatic, extraData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    automatic: ").append(toIndentedString(automatic)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

