/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class InlineObject {
  public static final String SERIALIZED_NAME_EDU_PERSON_PRINCIPAL_NAME = "eduPersonPrincipalName";
  @SerializedName(SERIALIZED_NAME_EDU_PERSON_PRINCIPAL_NAME)
  private String eduPersonPrincipalName;

  public static final String SERIALIZED_NAME_IS_MEMBER_OF = "isMemberOf";
  @SerializedName(SERIALIZED_NAME_IS_MEMBER_OF)
  private List<String> isMemberOf = null;

  public static final String SERIALIZED_NAME_GIVEN_NAME = "givenName";
  @SerializedName(SERIALIZED_NAME_GIVEN_NAME)
  private String givenName;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  /**
   * The role of the user in the organization
   */
  @JsonAdapter(OrgRoleEnum.Adapter.class)
  public enum OrgRoleEnum {
    ADMIN("admin"),
    
    INSTRUCTOR("instructor"),
    
    SIGNER("signer");

    private String value;

    OrgRoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrgRoleEnum fromValue(String value) {
      for (OrgRoleEnum b : OrgRoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrgRoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrgRoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrgRoleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrgRoleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ORG_ROLE = "orgRole";
  @SerializedName(SERIALIZED_NAME_ORG_ROLE)
  private OrgRoleEnum orgRole;


  public InlineObject eduPersonPrincipalName(String eduPersonPrincipalName) {
    
    this.eduPersonPrincipalName = eduPersonPrincipalName;
    return this;
  }

   /**
   * The username of the account
   * @return eduPersonPrincipalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jdo@email.com", value = "The username of the account")

  public String getEduPersonPrincipalName() {
    return eduPersonPrincipalName;
  }


  public void setEduPersonPrincipalName(String eduPersonPrincipalName) {
    this.eduPersonPrincipalName = eduPersonPrincipalName;
  }


  public InlineObject isMemberOf(List<String> isMemberOf) {
    
    this.isMemberOf = isMemberOf;
    return this;
  }

  public InlineObject addIsMemberOfItem(String isMemberOfItem) {
    if (this.isMemberOf == null) {
      this.isMemberOf = new ArrayList<String>();
    }
    this.isMemberOf.add(isMemberOfItem);
    return this;
  }

   /**
   * Memberships of the user
   * @return isMemberOf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Memberships of the user")

  public List<String> getIsMemberOf() {
    return isMemberOf;
  }


  public void setIsMemberOf(List<String> isMemberOf) {
    this.isMemberOf = isMemberOf;
  }


  public InlineObject givenName(String givenName) {
    
    this.givenName = givenName;
    return this;
  }

   /**
   * First name of the user
   * @return givenName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John", value = "First name of the user")

  public String getGivenName() {
    return givenName;
  }


  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }


  public InlineObject surname(String surname) {
    
    this.surname = surname;
    return this;
  }

   /**
   * Last name of the user
   * @return surname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Doe", value = "Last name of the user")

  public String getSurname() {
    return surname;
  }


  public void setSurname(String surname) {
    this.surname = surname;
  }


  public InlineObject orgRole(OrgRoleEnum orgRole) {
    
    this.orgRole = orgRole;
    return this;
  }

   /**
   * The role of the user in the organization
   * @return orgRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "signer", value = "The role of the user in the organization")

  public OrgRoleEnum getOrgRole() {
    return orgRole;
  }


  public void setOrgRole(OrgRoleEnum orgRole) {
    this.orgRole = orgRole;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject inlineObject = (InlineObject) o;
    return Objects.equals(this.eduPersonPrincipalName, inlineObject.eduPersonPrincipalName) &&
        Objects.equals(this.isMemberOf, inlineObject.isMemberOf) &&
        Objects.equals(this.givenName, inlineObject.givenName) &&
        Objects.equals(this.surname, inlineObject.surname) &&
        Objects.equals(this.orgRole, inlineObject.orgRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eduPersonPrincipalName, isMemberOf, givenName, surname, orgRole);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject {\n");
    sb.append("    eduPersonPrincipalName: ").append(toIndentedString(eduPersonPrincipalName)).append("\n");
    sb.append("    isMemberOf: ").append(toIndentedString(isMemberOf)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    orgRole: ").append(toIndentedString(orgRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

