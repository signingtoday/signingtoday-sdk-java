/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import signingToday.client.model.RobotConfigurationAuthentication;
import signingToday.client.model.RobotConfigurationWebhooks;

/**
 * RobotConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class RobotConfiguration {
  public static final String SERIALIZED_NAME_REQUEST_HEADERS = "requestHeaders";
  @SerializedName(SERIALIZED_NAME_REQUEST_HEADERS)
  private Map<String, List<String>> requestHeaders = null;

  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private RobotConfigurationAuthentication authentication;

  public static final String SERIALIZED_NAME_WEBHOOKS = "webhooks";
  @SerializedName(SERIALIZED_NAME_WEBHOOKS)
  private RobotConfigurationWebhooks webhooks;


  public RobotConfiguration requestHeaders(Map<String, List<String>> requestHeaders) {
    
    this.requestHeaders = requestHeaders;
    return this;
  }

  public RobotConfiguration putRequestHeadersItem(String key, List<String> requestHeadersItem) {
    if (this.requestHeaders == null) {
      this.requestHeaders = new HashMap<String, List<String>>();
    }
    this.requestHeaders.put(key, requestHeadersItem);
    return this;
  }

   /**
   * Eventually the headers the application have to use during requests
   * @return requestHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"Authorization\":[\"Token eed3fc66-cfc8-4b11-9bf9-33493d95411b\"]}", value = "Eventually the headers the application have to use during requests")

  public Map<String, List<String>> getRequestHeaders() {
    return requestHeaders;
  }


  public void setRequestHeaders(Map<String, List<String>> requestHeaders) {
    this.requestHeaders = requestHeaders;
  }


  public RobotConfiguration authentication(RobotConfigurationAuthentication authentication) {
    
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RobotConfigurationAuthentication getAuthentication() {
    return authentication;
  }


  public void setAuthentication(RobotConfigurationAuthentication authentication) {
    this.authentication = authentication;
  }


  public RobotConfiguration webhooks(RobotConfigurationWebhooks webhooks) {
    
    this.webhooks = webhooks;
    return this;
  }

   /**
   * Get webhooks
   * @return webhooks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RobotConfigurationWebhooks getWebhooks() {
    return webhooks;
  }


  public void setWebhooks(RobotConfigurationWebhooks webhooks) {
    this.webhooks = webhooks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RobotConfiguration robotConfiguration = (RobotConfiguration) o;
    return Objects.equals(this.requestHeaders, robotConfiguration.requestHeaders) &&
        Objects.equals(this.authentication, robotConfiguration.authentication) &&
        Objects.equals(this.webhooks, robotConfiguration.webhooks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestHeaders, authentication, webhooks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RobotConfiguration {\n");
    sb.append("    requestHeaders: ").append(toIndentedString(requestHeaders)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

