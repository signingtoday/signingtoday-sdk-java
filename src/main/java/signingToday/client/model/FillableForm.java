/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Two type of fillable exists; &#x60;SignatureForm&#x60; and &#x60;TextForm&#x60;. The former represents the association with the SignatureRequest, the latter represents any editable text form field to be filled before the signature process begins.
 */
@ApiModel(description = "Two type of fillable exists; `SignatureForm` and `TextForm`. The former represents the association with the SignatureRequest, the latter represents any editable text form field to be filled before the signature process begins.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class FillableForm {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "_instance_id";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private Long instanceId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "documentId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private Integer documentId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_POSITION_X = "positionX";
  @SerializedName(SERIALIZED_NAME_POSITION_X)
  private Float positionX;

  public static final String SERIALIZED_NAME_POSITION_Y = "positionY";
  @SerializedName(SERIALIZED_NAME_POSITION_Y)
  private Float positionY;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Float width;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Float height;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Long page;

  public static final String SERIALIZED_NAME_SIGNER_ID = "signerId";
  @SerializedName(SERIALIZED_NAME_SIGNER_ID)
  private Integer signerId;

  public static final String SERIALIZED_NAME_TO_FILL = "toFill";
  @SerializedName(SERIALIZED_NAME_TO_FILL)
  private Boolean toFill;

  public static final String SERIALIZED_NAME_FILLED = "filled";
  @SerializedName(SERIALIZED_NAME_FILLED)
  private Boolean filled;

  public static final String SERIALIZED_NAME_INVISIBLE = "invisible";
  @SerializedName(SERIALIZED_NAME_INVISIBLE)
  private Boolean invisible;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extraData";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = null;


   /**
   * It is a reference for internal use
   * @return instanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "It is a reference for internal use")

  public Long getInstanceId() {
    return instanceId;
  }




  public FillableForm id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the _form_
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Id of the _form_")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public FillableForm documentId(Integer documentId) {
    
    this.documentId = documentId;
    return this;
  }

   /**
   * Id of the document
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Id of the document")

  public Integer getDocumentId() {
    return documentId;
  }


  public void setDocumentId(Integer documentId) {
    this.documentId = documentId;
  }


  public FillableForm type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the fill form
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SignatureForm", value = "Type of the fill form")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public FillableForm positionX(Float positionX) {
    
    this.positionX = positionX;
    return this;
  }

   /**
   * Position onto the X axis of the form, expressed in percentage
   * @return positionX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.00", value = "Position onto the X axis of the form, expressed in percentage")

  public Float getPositionX() {
    return positionX;
  }


  public void setPositionX(Float positionX) {
    this.positionX = positionX;
  }


  public FillableForm positionY(Float positionY) {
    
    this.positionY = positionY;
    return this;
  }

   /**
   * Position onto the Y axis of the form, expressed in percentage
   * @return positionY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "58.14", value = "Position onto the Y axis of the form, expressed in percentage")

  public Float getPositionY() {
    return positionY;
  }


  public void setPositionY(Float positionY) {
    this.positionY = positionY;
  }


  public FillableForm width(Float width) {
    
    this.width = width;
    return this;
  }

   /**
   * Width of the form expressed in percentage
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10.1", value = "Width of the form expressed in percentage")

  public Float getWidth() {
    return width;
  }


  public void setWidth(Float width) {
    this.width = width;
  }


  public FillableForm height(Float height) {
    
    this.height = height;
    return this;
  }

   /**
   * Height of the form expressed in percentage
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5.66", value = "Height of the form expressed in percentage")

  public Float getHeight() {
    return height;
  }


  public void setHeight(Float height) {
    this.height = height;
  }


  public FillableForm page(Long page) {
    
    this.page = page;
    return this;
  }

   /**
   * Page of the document where the form is
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Page of the document where the form is")

  public Long getPage() {
    return page;
  }


  public void setPage(Long page) {
    this.page = page;
  }


  public FillableForm signerId(Integer signerId) {
    
    this.signerId = signerId;
    return this;
  }

   /**
   * Id of the signer in the sign plan
   * @return signerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Id of the signer in the sign plan")

  public Integer getSignerId() {
    return signerId;
  }


  public void setSignerId(Integer signerId) {
    this.signerId = signerId;
  }


  public FillableForm toFill(Boolean toFill) {
    
    this.toFill = toFill;
    return this;
  }

   /**
   * **True** if the field need to be filled by the user. In case of a Signature it is **false** 
   * @return toFill
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "**True** if the field need to be filled by the user. In case of a Signature it is **false** ")

  public Boolean getToFill() {
    return toFill;
  }


  public void setToFill(Boolean toFill) {
    this.toFill = toFill;
  }


  public FillableForm filled(Boolean filled) {
    
    this.filled = filled;
    return this;
  }

   /**
   * True ones the form has been filled
   * @return filled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "True ones the form has been filled")

  public Boolean getFilled() {
    return filled;
  }


  public void setFilled(Boolean filled) {
    this.filled = filled;
  }


  public FillableForm invisible(Boolean invisible) {
    
    this.invisible = invisible;
    return this;
  }

   /**
   * True if the appearance has to be hidden
   * @return invisible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "True if the appearance has to be hidden")

  public Boolean getInvisible() {
    return invisible;
  }


  public void setInvisible(Boolean invisible) {
    this.invisible = invisible;
  }


  public FillableForm extraData(Map<String, Object> extraData) {
    
    this.extraData = extraData;
    return this;
  }

  public FillableForm putExtraDataItem(String key, Object extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new HashMap<String, Object>();
    }
    this.extraData.put(key, extraDataItem);
    return this;
  }

   /**
   * Extra information about the form
   * @return extraData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"signatureRequestId\":1}", value = "Extra information about the form")

  public Map<String, Object> getExtraData() {
    return extraData;
  }


  public void setExtraData(Map<String, Object> extraData) {
    this.extraData = extraData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FillableForm fillableForm = (FillableForm) o;
    return Objects.equals(this.instanceId, fillableForm.instanceId) &&
        Objects.equals(this.id, fillableForm.id) &&
        Objects.equals(this.documentId, fillableForm.documentId) &&
        Objects.equals(this.type, fillableForm.type) &&
        Objects.equals(this.positionX, fillableForm.positionX) &&
        Objects.equals(this.positionY, fillableForm.positionY) &&
        Objects.equals(this.width, fillableForm.width) &&
        Objects.equals(this.height, fillableForm.height) &&
        Objects.equals(this.page, fillableForm.page) &&
        Objects.equals(this.signerId, fillableForm.signerId) &&
        Objects.equals(this.toFill, fillableForm.toFill) &&
        Objects.equals(this.filled, fillableForm.filled) &&
        Objects.equals(this.invisible, fillableForm.invisible) &&
        Objects.equals(this.extraData, fillableForm.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, id, documentId, type, positionX, positionY, width, height, page, signerId, toFill, filled, invisible, extraData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FillableForm {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    positionX: ").append(toIndentedString(positionX)).append("\n");
    sb.append("    positionY: ").append(toIndentedString(positionY)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    signerId: ").append(toIndentedString(signerId)).append("\n");
    sb.append("    toFill: ").append(toIndentedString(toFill)).append("\n");
    sb.append("    filled: ").append(toIndentedString(filled)).append("\n");
    sb.append("    invisible: ").append(toIndentedString(invisible)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

