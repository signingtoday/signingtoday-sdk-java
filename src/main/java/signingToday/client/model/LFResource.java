/*
 * Signing Today Web
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package signingToday.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * LFResource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T08:13:36.809Z[GMT]")
public class LFResource {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DST_UUID = "dstUuid";
  @SerializedName(SERIALIZED_NAME_DST_UUID)
  private UUID dstUuid;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_FILENAME = "filename";
  @SerializedName(SERIALIZED_NAME_FILENAME)
  private String filename;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_MIMETYPE = "mimetype";
  @SerializedName(SERIALIZED_NAME_MIMETYPE)
  private String mimetype;

  public static final String SERIALIZED_NAME_PAGES = "pages";
  @SerializedName(SERIALIZED_NAME_PAGES)
  private Integer pages;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extraData";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = null;


  public LFResource id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique id of the resource
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "05a80817-a3a5-48fe-83c0-0df0f48a2a26", value = "Unique id of the resource")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public LFResource domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * The _domain_ is the Organization which a user or a DST belongs
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bit4id", value = "The _domain_ is the Organization which a user or a DST belongs")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    this.domain = domain;
  }


   /**
   * Type of the resource, for example a _PDFResource_
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PDFResource", value = "Type of the resource, for example a _PDFResource_")

  public String getType() {
    return type;
  }




   /**
   * Unique id of the _DST_ which the resource is correlated
   * @return dstUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "d9b4df92-cf85-48dc-a2de-955f518a2992", value = "Unique id of the _DST_ which the resource is correlated")

  public UUID getDstUuid() {
    return dstUuid;
  }




  public LFResource title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the resource
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sales Contract", value = "Title of the resource")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public LFResource filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * Name of the file uploaded, with its extension as well
   * @return filename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "contract.pdf", value = "Name of the file uploaded, with its extension as well")

  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


   /**
   * Url of the resource
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26", value = "Url of the resource")

  public String getUrl() {
    return url;
  }




   /**
   * Size of the resource
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1024", value = "Size of the resource")

  public Long getSize() {
    return size;
  }




   /**
   * Indicates when the resource has been uploaded
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2007-04-02T19:30:10Z", value = "Indicates when the resource has been uploaded")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * _MIME_ type of the resource
   * @return mimetype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "application/pdf", value = "_MIME_ type of the resource")

  public String getMimetype() {
    return mimetype;
  }




  public LFResource pages(Integer pages) {
    
    this.pages = pages;
    return this;
  }

   /**
   * Indicates how many pages the resource is
   * @return pages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Indicates how many pages the resource is")

  public Integer getPages() {
    return pages;
  }


  public void setPages(Integer pages) {
    this.pages = pages;
  }


  public LFResource extraData(Map<String, Object> extraData) {
    
    this.extraData = extraData;
    return this;
  }

  public LFResource putExtraDataItem(String key, Object extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new HashMap<String, Object>();
    }
    this.extraData.put(key, extraDataItem);
    return this;
  }

   /**
   * Extra data of the resource
   * @return extraData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"toSign\":true}", value = "Extra data of the resource")

  public Map<String, Object> getExtraData() {
    return extraData;
  }


  public void setExtraData(Map<String, Object> extraData) {
    this.extraData = extraData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LFResource lfResource = (LFResource) o;
    return Objects.equals(this.id, lfResource.id) &&
        Objects.equals(this.domain, lfResource.domain) &&
        Objects.equals(this.type, lfResource.type) &&
        Objects.equals(this.dstUuid, lfResource.dstUuid) &&
        Objects.equals(this.title, lfResource.title) &&
        Objects.equals(this.filename, lfResource.filename) &&
        Objects.equals(this.url, lfResource.url) &&
        Objects.equals(this.size, lfResource.size) &&
        Objects.equals(this.createdAt, lfResource.createdAt) &&
        Objects.equals(this.mimetype, lfResource.mimetype) &&
        Objects.equals(this.pages, lfResource.pages) &&
        Objects.equals(this.extraData, lfResource.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, domain, type, dstUuid, title, filename, url, size, createdAt, mimetype, pages, extraData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LFResource {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    dstUuid: ").append(toIndentedString(dstUuid)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    mimetype: ").append(toIndentedString(mimetype)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

